{
  "version": 3,
  "sources": ["../src/error.ts", "../src/core.ts", "../src/resources/token.ts", "../src/resources/user.ts", "../src/oauth.ts"],
  "sourcesContent": ["export class APIError extends Error {\n  status: number;\n\n  constructor(status: number, message: string) {\n    super(`${APIError.makeMessage(status, message)}`);\n    this.status = status;\n  }\n\n  private static makeMessage(status: number, message: string) {\n    if (status && message) {\n      return `[${status}]: ${message}`;\n    }\n    if (status) {\n      return `[${status}]: \uC5D0\uB7EC \uBA54\uC138\uC9C0\uAC00 \uBE44\uC5B4\uC788\uC2B5\uB2C8\uB2E4.`;\n    }\n\n    return '[500]: \uC11C\uBC84\uC5D0\uC11C \uC54C \uC218 \uC5C6\uB294 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.';\n  }\n}\n", "import { Student, Teacher, Role } from './types/user';\nimport { ClientOptions } from './oauth';\n\nexport class Client {\n  protected options: ClientOptions;\n\n  constructor(options: ClientOptions = {}) {\n    this.options = options;\n  }\n}\n\nexport const request = async <T>(\n  path: string,\n  body: Record<string, unknown>\n): Promise<T> => {\n  const url = 'https://auth.bssm.kro.kr/api/oauth'.concat(path);\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(body),\n  });\n\n  return await response.json();\n};\n\nexport function isStudent(user: Student | Teacher): user is Student {\n  return user.role === Role.STUDENT;\n}\n\nexport function isTeacher(user: Student | Teacher): user is Teacher {\n  return user.role === Role.TEACHER;\n}\n\nexport function isFalsy(value: any) {\n  return (\n    value === false ||\n    value === null ||\n    value === 0 ||\n    value === '' ||\n    value === undefined ||\n    isNaN(value)\n  );\n}\n", "import { APIError } from '../error';\nimport { Client, request, isFalsy } from '../core';\nimport { ClientOptions } from '../oauth';\n\nexport class Token extends Client {\n  constructor(options: ClientOptions) {\n    super(options);\n  }\n\n  async get(authCode: string) {\n    try {\n      if (isFalsy(authCode)) {\n        throw new APIError(404, '\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 authCode\uC785\uB2C8\uB2E4.');\n      }\n\n      const data = await request<{ token: string }>('/token', {\n        authCode,\n        ...this.options,\n      });\n\n      return data.token;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n}\n", "import { APIError } from '../error';\nimport { Student, Teacher } from '../types/user';\nimport { Client, request, isStudent, isTeacher, isFalsy } from '../core';\nimport { ClientOptions } from '../oauth';\n\nexport class User extends Client {\n  constructor(options: ClientOptions) {\n    super(options);\n  }\n\n  async get(token: string) {\n    try {\n      if (isFalsy(token)) {\n        throw new APIError(404, '\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 token\uC785\uB2C8\uB2E4.');\n      }\n\n      const data = await request<{ user: Student | Teacher }>('/resource', {\n        token,\n        ...this.options,\n      });\n\n      if (isStudent(data.user)) {\n        return data.user;\n      }\n\n      if (isTeacher(data.user)) {\n        return data.user;\n      }\n\n      return data.user;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n}\n", "import { APIError } from './error';\nimport { Token } from './resources/token';\nimport { User } from './resources/user';\n\nexport interface ClientOptions {\n  clientId?: string;\n  clientSecret?: string;\n}\n\nexport class BsmOauth {\n  protected options: ClientOptions;\n  user: User;\n  token: Token;\n\n  constructor({ clientId, clientSecret }: ClientOptions) {\n    if (clientId == undefined || clientSecret == undefined) {\n      throw new APIError(400, '\uC798\uBABB\uB41C \uD074\uB77C\uC774\uC5B8\uD2B8 \uC815\uBCF4\uC785\uB2C8\uB2E4.');\n    }\n\n    this.options = { clientId, clientSecret };\n    this.user = new User(this.options);\n    this.token = new Token(this.options);\n  }\n}\n\nexport default BsmOauth;\n"],
  "mappings": ";AAAO,IAAM,WAAN,MAAM,kBAAiB,MAAM;AAAA,EAGlC,YAAY,QAAgB,SAAiB;AAC3C,UAAM,GAAG,UAAS,YAAY,QAAQ,OAAO,CAAC,EAAE;AAChD,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,OAAe,YAAY,QAAgB,SAAiB;AAC1D,QAAI,UAAU,SAAS;AACrB,aAAO,IAAI,MAAM,MAAM,OAAO;AAAA,IAChC;AACA,QAAI,QAAQ;AACV,aAAO,IAAI,MAAM;AAAA,IACnB;AAEA,WAAO;AAAA,EACT;AACF;;;ACfO,IAAM,SAAN,MAAa;AAAA,EAGlB,YAAY,UAAyB,CAAC,GAAG;AACvC,SAAK,UAAU;AAAA,EACjB;AACF;AAEO,IAAM,UAAU,OACrB,MACA,SACe;AACf,QAAM,MAAM,qCAAqC,OAAO,IAAI;AAC5D,QAAM,WAAW,MAAM,MAAM,KAAK;AAAA,IAChC,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAC9C,MAAM,KAAK,UAAU,IAAI;AAAA,EAC3B,CAAC;AAED,SAAO,MAAM,SAAS,KAAK;AAC7B;AAEO,SAAS,UAAU,MAA0C;AAClE,SAAO,KAAK;AACd;AAEO,SAAS,UAAU,MAA0C;AAClE,SAAO,KAAK;AACd;AAEO,SAAS,QAAQ,OAAY;AAClC,SACE,UAAU,SACV,UAAU,QACV,UAAU,KACV,UAAU,MACV,UAAU,UACV,MAAM,KAAK;AAEf;;;ACtCO,IAAM,QAAN,cAAoB,OAAO;AAAA,EAChC,YAAY,SAAwB;AAClC,UAAM,OAAO;AAAA,EACf;AAAA,EAEA,MAAM,IAAI,UAAkB;AAC1B,QAAI;AACF,UAAI,QAAQ,QAAQ,GAAG;AACrB,cAAM,IAAI,SAAS,KAAK,mEAAsB;AAAA,MAChD;AAEA,YAAM,OAAO,MAAM,QAA2B,UAAU;AAAA,QACtD;AAAA,QACA,GAAG,KAAK;AAAA,MACV,CAAC;AAED,aAAO,KAAK;AAAA,IACd,SAAS,OAAO;AACd,cAAQ,MAAM,KAAK;AACnB,YAAM;AAAA,IACR;AAAA,EACF;AACF;;;ACrBO,IAAM,OAAN,cAAmB,OAAO;AAAA,EAC/B,YAAY,SAAwB;AAClC,UAAM,OAAO;AAAA,EACf;AAAA,EAEA,MAAM,IAAI,OAAe;AACvB,QAAI;AACF,UAAI,QAAQ,KAAK,GAAG;AAClB,cAAM,IAAI,SAAS,KAAK,gEAAmB;AAAA,MAC7C;AAEA,YAAM,OAAO,MAAM,QAAqC,aAAa;AAAA,QACnE;AAAA,QACA,GAAG,KAAK;AAAA,MACV,CAAC;AAED,UAAI,UAAU,KAAK,IAAI,GAAG;AACxB,eAAO,KAAK;AAAA,MACd;AAEA,UAAI,UAAU,KAAK,IAAI,GAAG;AACxB,eAAO,KAAK;AAAA,MACd;AAEA,aAAO,KAAK;AAAA,IACd,SAAS,OAAO;AACd,cAAQ,MAAM,KAAK;AACnB,YAAM;AAAA,IACR;AAAA,EACF;AACF;;;AC1BO,IAAM,WAAN,MAAe;AAAA,EAKpB,YAAY,EAAE,UAAU,aAAa,GAAkB;AACrD,QAAI,YAAY,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,SAAS,KAAK,mFAAkB;AAAA,IAC5C;AAEA,SAAK,UAAU,EAAE,UAAU,aAAa;AACxC,SAAK,OAAO,IAAI,KAAK,KAAK,OAAO;AACjC,SAAK,QAAQ,IAAI,MAAM,KAAK,OAAO;AAAA,EACrC;AACF;",
  "names": []
}
