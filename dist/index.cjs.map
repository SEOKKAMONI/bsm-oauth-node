{
  "version": 3,
  "sources": ["../src/index.ts", "../src/error.ts", "../src/core.ts", "../src/resources/token.ts", "../src/resources/user.ts", "../src/oauth.ts"],
  "sourcesContent": ["export type { Student, Teacher } from './types/user';\nexport { BsmOauth } from './oauth';\nexport { BsmOauth as default } from './oauth';\n", "export class APIError extends Error {\n  status: number;\n\n  constructor(status: number, message: string) {\n    super(`${APIError.makeMessage(status, message)}`);\n    this.status = status;\n  }\n\n  private static makeMessage(status: number, message: string) {\n    if (status && message) {\n      return `[${status}]: ${message}`;\n    }\n    if (status) {\n      return `[${status}]: \uC5D0\uB7EC \uBA54\uC138\uC9C0\uAC00 \uBE44\uC5B4\uC788\uC2B5\uB2C8\uB2E4.`;\n    }\n\n    return '[500]: \uC11C\uBC84\uC5D0\uC11C \uC54C \uC218 \uC5C6\uB294 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.';\n  }\n}\n", "import { Student, Teacher, Role } from './types/user';\nimport { ClientOptions } from './oauth';\nexport class Client {\n  protected options: ClientOptions;\n\n  constructor(options: ClientOptions = {}) {\n    this.options = options;\n  }\n}\n\nexport const request = async <T>(path: string, body: Object): Promise<T> => {\n  const response = await fetch(`https://auth.bssm.kro.kr/api/oauth/${path}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ body }),\n  });\n\n  return response.json();\n};\n\nexport function isStudent(user: Student | Teacher): user is Student {\n  return user.role === Role.STUDENT;\n}\n\nexport function isTeacher(user: Student | Teacher): user is Teacher {\n  return user.role === Role.TEACHER;\n}\n", "import { APIError } from '../error';\nimport { Client, request } from '../core';\n\nexport class Token extends Client {\n  async get(authCode: string) {\n    if (authCode == undefined) {\n      throw new APIError(404, '\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 authCode\uC785\uB2C8\uB2E4.');\n    }\n\n    const data = await request<{ token: string }>('/token', {\n      authCode,\n      ...this.options,\n    });\n\n    return data.token;\n  }\n}\n", "import { APIError } from '../error';\nimport { Student, Teacher } from '../types/user';\nimport { Client, request, isStudent, isTeacher } from '../core';\n\nexport class User extends Client {\n  async get(token: string) {\n    if (token == undefined) {\n      throw new APIError(404, '\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 token\uC785\uB2C8\uB2E4.');\n    }\n\n    const data = await request<{ user: Student | Teacher }>('/resource', {\n      token,\n      ...this.options,\n    });\n\n    if (isStudent(data.user)) {\n      return data.user;\n    }\n\n    if (isTeacher(data.user)) {\n      return data.user;\n    }\n\n    return data.user;\n  }\n}\n", "import { APIError } from './error';\nimport { Token } from './resources/token';\nimport { User } from './resources/user';\nimport { Client } from './core';\n\nexport interface ClientOptions {\n  clientId?: string;\n  clientSecret?: string;\n}\n\nexport class BsmOauth extends Client {\n  protected options: ClientOptions;\n\n  constructor({ clientId, clientSecret }: ClientOptions) {\n    super();\n\n    if (clientId == undefined || clientSecret == undefined) {\n      throw new APIError(400, '\uC798\uBABB\uB41C \uD074\uB77C\uC774\uC5B8\uD2B8 \uC815\uBCF4\uC785\uB2C8\uB2E4.');\n    }\n\n    this.options = { clientId, clientSecret };\n  }\n\n  user: User = new User(this.options);\n  token: Token = new Token(this.options);\n}\n\nexport default BsmOauth;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,IAAM,WAAN,MAAM,kBAAiB,MAAM;AAAA,EAGlC,YAAY,QAAgB,SAAiB;AAC3C,UAAM,GAAG,UAAS,YAAY,QAAQ,OAAO,CAAC,EAAE;AAChD,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,OAAe,YAAY,QAAgB,SAAiB;AAC1D,QAAI,UAAU,SAAS;AACrB,aAAO,IAAI,MAAM,MAAM,OAAO;AAAA,IAChC;AACA,QAAI,QAAQ;AACV,aAAO,IAAI,MAAM;AAAA,IACnB;AAEA,WAAO;AAAA,EACT;AACF;;;AChBO,IAAM,SAAN,MAAa;AAAA,EAGlB,YAAY,UAAyB,CAAC,GAAG;AACvC,SAAK,UAAU;AAAA,EACjB;AACF;AAEO,IAAM,UAAU,OAAU,MAAc,SAA6B;AAC1E,QAAM,WAAW,MAAM,MAAM,sCAAsC,IAAI,IAAI;AAAA,IACzE,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,gBAAgB;AAAA,IAClB;AAAA,IACA,MAAM,KAAK,UAAU,EAAE,KAAK,CAAC;AAAA,EAC/B,CAAC;AAED,SAAO,SAAS,KAAK;AACvB;AAEO,SAAS,UAAU,MAA0C;AAClE,SAAO,KAAK;AACd;AAEO,SAAS,UAAU,MAA0C;AAClE,SAAO,KAAK;AACd;;;ACzBO,IAAM,QAAN,cAAoB,OAAO;AAAA,EAChC,MAAM,IAAI,UAAkB;AAC1B,QAAI,YAAY,QAAW;AACzB,YAAM,IAAI,SAAS,KAAK,mEAAsB;AAAA,IAChD;AAEA,UAAM,OAAO,MAAM,QAA2B,UAAU;AAAA,MACtD;AAAA,MACA,GAAG,KAAK;AAAA,IACV,CAAC;AAED,WAAO,KAAK;AAAA,EACd;AACF;;;ACZO,IAAM,OAAN,cAAmB,OAAO;AAAA,EAC/B,MAAM,IAAI,OAAe;AACvB,QAAI,SAAS,QAAW;AACtB,YAAM,IAAI,SAAS,KAAK,gEAAmB;AAAA,IAC7C;AAEA,UAAM,OAAO,MAAM,QAAqC,aAAa;AAAA,MACnE;AAAA,MACA,GAAG,KAAK;AAAA,IACV,CAAC;AAED,QAAI,UAAU,KAAK,IAAI,GAAG;AACxB,aAAO,KAAK;AAAA,IACd;AAEA,QAAI,UAAU,KAAK,IAAI,GAAG;AACxB,aAAO,KAAK;AAAA,IACd;AAEA,WAAO,KAAK;AAAA,EACd;AACF;;;ACfO,IAAM,WAAN,cAAuB,OAAO;AAAA,EAGnC,YAAY,EAAE,UAAU,aAAa,GAAkB;AACrD,UAAM;AASR,gBAAa,IAAI,KAAK,KAAK,OAAO;AAClC,iBAAe,IAAI,MAAM,KAAK,OAAO;AARnC,QAAI,YAAY,UAAa,gBAAgB,QAAW;AACtD,YAAM,IAAI,SAAS,KAAK,mFAAkB;AAAA,IAC5C;AAEA,SAAK,UAAU,EAAE,UAAU,aAAa;AAAA,EAC1C;AAIF;",
  "names": []
}
